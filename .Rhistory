if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
require(dplyr)
rowvar <- enquo(rowvar)
colvar <- enquo(colvar)
if (!is.factor(!!rowvar))
rowvar <- as.factor(!!rowvar)
if (!is.factor(!!colvar))
colvar <- as.factor(!!colvar)
t <- table(data$rowvar, data$colvar)
# names(dimnames(tb)) <- c(deparse(substitute(rowvar)), deparse(substitute(colvar)))  if (na.rm==TRUE)
#   t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
# if (total==TRUE)
#   t <- addmargins(t, FUN=list("<Total>"=sum))
# if (type=="freq")
#   t
# if (type=="rowpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
# if (type=="colpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
# if (type=="cellpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
# return(t)
}
debug(crosstab)
crosstab(mtcars, cyl, am)
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[rowvar])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[colvar])
t <- table(data[rowvar], data[colvar])
# names(dimnames(tb)) <- c(deparse(substitute(rowvar)), deparse(substitute(colvar)))  if (na.rm==TRUE)
#   t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
# if (total==TRUE)
#   t <- addmargins(t, FUN=list("<Total>"=sum))
# if (type=="freq")
#   t
# if (type=="rowpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
# if (type=="colpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
# if (type=="cellpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
# return(t)
}
debug(crosstab)
crosstab(mtcars, cyl, am)
str(data)
undebug(crosstab)
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[rowvar])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[colvar])
t <- table(data[rowvar], data[colvar])
# names(dimnames(tb)) <- c(deparse(substitute(rowvar)), deparse(substitute(colvar)))  if (na.rm==TRUE)
#   t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
# if (total==TRUE)
#   t <- addmargins(t, FUN=list("<Total>"=sum))
# if (type=="freq")
#   t
# if (type=="rowpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
# if (type=="colpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
# if (type=="cellpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
crosstab(mtcars, cyl, am)
debug(crosstab)
crosstab(mtcars, cyl, am)
data
mtcars["am"]
is.factor(mtcars["am"])
mtcars["am"] <- mtcars["am"]
mtcars["am"]
mtcars["am"] <- factor(mtcars["am"])
mtcars["am"]
data(mtcars)
mtcars["am"]
mtcars["am"] <- factor(mtcars[["am"]])
mtcars["am"]
class(mtcars["am"])
str(mtcars["am"])
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[rowvar], data[colvar])
# names(dimnames(tb)) <- c(deparse(substitute(rowvar)), deparse(substitute(colvar)))  if (na.rm==TRUE)
#   t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
# if (total==TRUE)
#   t <- addmargins(t, FUN=list("<Total>"=sum))
# if (type=="freq")
#   t
# if (type=="rowpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
# if (type=="colpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
# if (type=="cellpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
debug(crosstab)
crosstab(mtcars, am, cyl)
data
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
# names(dimnames(tb)) <- c(deparse(substitute(rowvar)), deparse(substitute(colvar)))  if (na.rm==TRUE)
#   t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
# if (total==TRUE)
#   t <- addmargins(t, FUN=list("<Total>"=sum))
# if (type=="freq")
#   t
# if (type=="rowpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
# if (type=="colpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
# if (type=="cellpercent")
#   t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
debug(crosstab)
crosstab(mtcars, am, cyl)
t
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
names(dimnames(tb)) <- c(deparse(substitute(rowvar)), deparse(substitute(colvar)))  if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
debug(crosstab)
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
names(dimnames(tb)) <- c(rowvar, colvar)))
if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
names(dimnames(tb)) <- c(rowvar, colvar)))
if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
type <- match.art(type)
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
names(dimnames(tb)) <- c(rowvar, colvar)))
if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
type <- match.art(type)
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
names(dimnames(tb)) <- c(rowvar, colvar)))
if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
type <- match.art(type)
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
x <- crosstab(mtcars, am, cyl)
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
type <- match.arg(type)
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
x <- crosstab(mtcars, am, cyl)
x
?dimnames
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
type <- match.arg(type)
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
dimnames(t) <- c(rowvar, colvar)
if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
x <- crosstab(mtcars, am, cyl)
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
type <- match.arg(type)
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
dimnames(t) <- list(rowvar, colvar)
if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
x <- crosstab(mtcars, am, cyl)
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
type <- match.arg(type)
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
#dimnames(t) <- list(rowvar, colvar)
if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
x <- crosstab(mtcars, am, cyl)
x
class(X)
class(x)
dimnames(x)
names(x) <- c("A", "B")
x
names(x)
x <- table(mtcars$am, mtcars$cyl)
x
attributes(x)
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
type <- match.arg(type)
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
print(paste(rowvar, "by", colvar))
if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
x <- table(mtcars$am, mtcars$cyl)
x
crosstab <- function(data, rowvar, colvar,
type=c("freq", "rowpercent", "colpercent"),
total=TRUE, na.rm=FALSE,
digits=2){
rowvar <- deparse(substitute(rowvar))
colvar <- deparse(substitute(colvar))
type <- match.arg(type)
if (!is.factor(data[rowvar]))
data[rowvar] <- as.factor(data[[rowvar]])
if (!is.factor(data[colvar]))
data[colvar] <- as.factor(data[[colvar]])
t <- table(data[[rowvar]], data[[colvar]])
names(t) <- c(rowvar, colvar)
if (na.rm==TRUE)
t <- table(!!data$rowvar, !!data$colvar, useNA = c("ifany"))
if (total==TRUE)
t <- addmargins(t, FUN=list("<Total>"=sum))
if (type=="freq")
t
if (type=="rowpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,1)*100))
if (type=="colpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t,2)*100))
if (type=="cellpercent")
t <- replace(t, TRUE, sprintf(paste0("%.",digits,"f%%"),prop.table(t)*100))
return(t)
}
<<<<<<< HEAD
install.packages("rio")
library(rio)
install_formats()
convert("border.csv", "border.rda")
setwd("~/Documents/R Projects")
load("~/Documents/R Projects/qacr/data/border.rda")
View(x)
convert("border.csv", "border.rda")
View(border.rda)
border.rda
View(border.rda)
load("~/Documents/R Projects/qacr/data/border.rda")
View(border.rda)
setwd("~/Documents/R Projects/qacr")
View(border.rda)
load(border.rda)
load("~/Documents/R Projects/qacr/data/border.rda")
View(border.rda)
border <- x
=======
x <- crosstab(mtcars, am, cyl)
x
attributes(x)
crosstab(mtcars, am, cyl)
crosstab(mtcars, am, cyl, type="rowpercent")
crosstab(mtcars, am, cyl, type="percent")
crosstab(mtcars, am, cyl, type="colpercent")
?print.table
>>>>>>> upstream/master
